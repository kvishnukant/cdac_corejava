//java samples

Given:
11. public static void main(String[] args) {
12.   Object obj = new int[] { 1, 2, 3 };
13.   int[] someArray = (int[])obj;
14.   for (int i : someArray) System.out.print(i + " ");
15. }
What is the result?

--------------------------------------
Given : 

public class TestOverLoad {   public static void main(String[] args) {  test(null);  }
public static void test(String e) {  System.out.println("in string");} public static void test(Integer e) {  System.out.println("in Integer"); }
}
}
------------------------------------------
Given : 

public class TestOverLoad {   public static void main(String[] args) {  test(null);  }
public static void test(String e) {  System.out.println("in string");} public static void test(Object e) {  System.out.println("in object"); }
}
}

------------------------------------------


Given :        class Base
{
 public Object getValue(){ return new Object(); } //1
}

class Base2 extends Base
{
 public String getValue(){ return "hello"; } //2
}

public class TestClass
{
 public static void main(String[] args)
 {
  Base b = new Base2();
  System.out.println(b.getValue()); //3
 }
}

--------------------------------------


package tester2;

class A {
	 private int i = 10;
	public void f() {
		System.out.println("in f()");
	}

	public void g() {
		System.out.println("1");
	}
}
class B extends A {
	 int i = 20;

	public void g() {
		System.out.println("2");
	}
}

public class C {
	public static void main(String[] args) {
		A a = new A();// 1
		A b = new B();// 2
		System.out.println(a.i+"  "+b.i);
		b.f();
		b.g();

	}
}

---------------------------
package p1;

public class Base {
	protected int data;
}


package p2;
import p1.Base;
public class Derived extends Base {
	public Derived() {
		System.out.println(data);
		Base b1=new Base();
		System.out.println(b1.data);
	}

}
---------------------------------
package tester2;

public class TestOverride {

	public static void main(String[] args) {
		A1 a1=new B1();
		a1.test();

	}

}
class A1
{
	private void test()
	{
		System.out.println("1");
	}
}
class B1 extends A1
{
	 void test()
	{
		System.out.println("2");
	}
}
-------------------------------------------